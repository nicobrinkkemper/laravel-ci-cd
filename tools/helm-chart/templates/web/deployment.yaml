{{- if .Values.web.enabled -}}
  {{- if .Capabilities.APIVersions.Has "apps/v1" }}
apiVersion: apps/v1
  {{- else }}
apiVersion: apps/v1beta1
  {{- end }}
kind: Deployment
metadata:
  name: web
  labels:
    app.kubernetes.io/name: {{ include "helm-chart.name" . }}-web
    helm.sh/chart: {{ include "helm-chart.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}-web
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "helm-chart.name" . }}-web
      app.kubernetes.io/instance: {{ .Release.Name }}-web
  strategy:
    type: {{ .Values.web.updateStrategy.type }}
  {{ if and .Values.web.updateStrategy.type (eq .Values.web.updateStrategy.type "RollingUpdate") }}
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "helm-chart.name" . }}-web
        app.kubernetes.io/instance: {{ .Release.Name }}-web
    spec:
      imagePullSecrets:
          - name: {{ .Values.image.pullSecret }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: START_MODE
              value: "web"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.web.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: http
              initialDelaySeconds: {{ .Values.web.livenessProbe.initialDelaySeconds }}
              periodSeconds: {{ .Values.web.livenessProbe.periodSeconds }}
              timeoutSeconds: {{ .Values.web.livenessProbe.timeoutSeconds }}
              successThreshold: {{ .Values.web.livenessProbe.successThreshold }}
              failureThreshold: {{ .Values.web.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.web.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: {{ .Values.web.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.web.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.web.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.web.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.web.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
      restartPolicy: "Always"
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.web.affinity }}
    affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.web.tolerations }}
    tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end -}}